server {
	server_name liferay.local.es;
	listen 80;

##	# This is for letsencrypt creation / renewal (even if the cert is already invalid)
##	root /usr/share/nginx/html/letsencrypt/localliferay.at;
##	location /.well-known/ {}
##
##	location / {
##		return 301 https://$host$request_uri;
##	}
##}
##
##server {
##
##	# example of an HTTPS configuration (to enable remove all ##)
##	server_name localliferay.at;
##	listen 443 http2 ssl; # managed by Certbot
##	ssl_certificate /etc/letsencrypt/live/localliferay.at/fullchain.pem; # managed by Certbot
##	ssl_certificate_key /etc/letsencrypt/live/localliferay.at/privkey.pem; # managed by Certbot
##	ssl_session_cache shared:le_nginx_SSL:1m; # managed by Certbot
##	ssl_session_timeout 1440m; # managed by Certbot
##	ssl_protocols TLSv1.1 TLSv1.2; # managed by Certbot
##	ssl_prefer_server_ciphers on; # managed by Certbot
##	ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256 ECDHE-ECDSA-AES256-GCM-SHA384 ECDHE-ECDSA-AES128-SHA ECDHE-ECDSA-AES256-SHA ECDHE-ECDSA-AES128-SHA256 ECDHE-ECDSA-AES256-SHA384 ECDHE-RSA-AES128-GCM-SHA256 ECDHE-RSA-AES256-GCM-SHA384 ECDHE-RSA-AES128-SHA ECDHE-RSA-AES128-SHA256 ECDHE-RSA-AES256-SHA384 DHE-RSA-AES128-GCM-SHA256 DHE-RSA-AES256-GCM-SHA384 DHE-RSA-AES128-SHA DHE-RSA-AES256-SHA DHE-RSA-AES128-SHA256 DHE-RSA-AES256-SHA256 EDH-RSA-DES-CBC3-SHA"; # managed by Certbot

	index index.html index.htm;

	location / {
		# forward the request to our liferay container
		proxy_pass http://liferay:8080/;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header Host $host;
		proxy_redirect off;
	}
}